all non primitive data types are objects
array 
abjects
functions
date
math
regexp(Regular Expression)
json


primitive data types
1>string :use double coat,singal coat, backtick
var str="hi';
    name   value


    interpolation->${} allowing embedded expression

    template liter are string literals allowimg embedded expression you can use multi-line string and string interpolation features with them they were called "template 
    string" in prior editions of the es2015 specification

    syntax 
    `string text`
    `string text line1
    string text line2`

    `string text ${expression} string text`
    tag `string text ${expression} string text`

    js 3 types of quotes
    1>double quotes:"hello"
    2>single quotes:'hello'
    3>backticks:`hello'

    backticks are extended functionality quotes they allow us to embed variables and expressions into a string by wrapping them in ${..}

    let name="john";
    //embedded a variables
    alert(`hello , ${name}!);
    the expression inside ${...}is evaluated and the result becomes a part of the string.we can put anything there a variable like name or an arthmatical expression
    like 1+2 or something more complex                              
  checking datatype use typeof


  Number Data type
  var n=123;
  n=12.345;

  the number type represents both integer and floating point numbers.

  there are many operation for numbers
  e.g multipication * ,division /, addition +, subbstraction - and so on; 

  infinity represents the mathematical infinity .
  it is a special value that's greater than any number.
  we can get it as a result of division by zero
  alert(1/0); //infinity
  alert(infinity);//infinity
  NaN represents a computational error.it is result of an incorrect or an undefined mathematical operation,for instance
  alert("not a number"/2); //NaN, such division is erroneous NaN is sticky
  any further operation on Nan Returns NaN
  alert("not a number"/2+5); //NaN
  sp if there's a NaN somewhere in a mathematical expression,it propagates to the whole result 
  let is keyword to declare a variable


Array in Javascript
in Javascript,array is a single variable that is used to store different elements..
in js array is a single variable that stores multiple elements.

the js array object is a global object that is used in the construction of arrays;which are high-level,list like objects
 
 create an array
 var fruits = ['apple','banan'];
 console.log(fruits.length);
 <ESLint prettier> java script coding conventional tools



The array.of() method creates a new array instance from a variable number of arguments,regardless
of number or type of the arguments

syntax
Array.of(element0[,element1[,...[',elementN]]])

The difference btn Array.of and the array constructor is in the handling of integer arguments: Array.of(7) creates an array with a single elements,7 whereas
 array(7) creates an empty array with a length
 Array.of(7);  //[7]
 Array.of(1,2,3); //[1,2,3]
 Array(1,2,3); //[1,2,3]


The Array.isArray()
method determnes whether the passed value is an array.

syntax
Array.isArray(value)
Array.isArray([1,2,3]); //true
Array.isArray({foo:123}); //false
Array.isArray('foobar'); //false
Array.isArray(undefined); //false
if the value is an array,true is returned,otherwise false is returned


array.from() method creates a new shallow-copied array instance fro an array-like oriterable obj

spread operator
js ES6 introduced the spread operator.
the syntax is three dots(..) followed by the array (or iterable)
it extends the array into individual elements .so it can be used to expand the array in a places where zero or more elements are expected



objects
as we know from the chapter data types, seven data types in Javascript.
six of them are called primitive,because there values contain only a single thing (be it a string or a number or whatever).


in contrast,objects are used to store keyed collections of various data and more complex entities.
in Javascript,objects penetrate almost every aspect of the language

an object can be created with figure brackets{...} with an optional list of properties.A property is a "key : value" pair,and whre key is a string (almost
called a "property name"),and value can be anything


let user = new Object();  //"object constructor" syntax
let user = {}; //"object literal" syntax

usually,the figure brackets {...}are used.
that declaration is called an object literal.

Literals and propertieswe can immediately put some properties into{...} as "key:value" pairs

let user={     //an object
  name:"john",  //by key "name" store value "john"
  age:30      //by key "age" store value 30
};


{
  console.log('hello'); //block of code...

}//not object this is IIFE IN ES6 this function expression

var obj = {
  key : value;
} //this is obj


Reserved words are allowed as property names a variable cannot have a name equal to one of language-reserved words like "for"
,"let","return" etc.


but for an object property ,there,s no such restriction. any name is fine
let obj ={
  for:1,
  let:2,
  return:3
};
alert(obj.for + obj.let + obj.return);

Assignment:

































  